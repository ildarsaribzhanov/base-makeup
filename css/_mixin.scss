@mixin transition($s, $t, $fn: linear,  $d: 0s) {
	-webkit-transition: $s $t $fn $d;
	-moz-transition: $s $t $fn $d;
	-o-transition: $s $t $fn $d;
	transition: $s $t $fn $d;
}

@mixin transform_transition($t, $fn: linear, $d: 0s) {
	-webkit-transition: -webkit-transform $t $fn $d;
	-moz-transition: -moz-transform $t $fn $d;
	-o-transition: -o-transform $t $fn $d;
	transition: transform $t $fn $d;
}

@mixin animate($name, $t: 1s, $fn: linear, $d: 0s, $count: 1) {
	animation-name: $name;
	animation-duration: $t;
	animation-timing-function: $fn;
	animation-delay: $d;
	animation-iteration-count: $count;
}

@mixin bd_raduis($r1, $r2:$r1, $r3:$r1, $r4:$r2) {
	-webkit-border-radius: $r1 $r2 $r3 $r4;
	-moz-border-radius: $r1 $r2 $r3 $r4;
	border-radius: $r1 $r2 $r3 $r4;
}

@mixin rotate_x($d) {
	-moz-transform: rotateX($d);
	-ms-transform: rotateX($d);
	-webkit-transform: rotateX($d);
	transform: rotateX($d);
}

@mixin rotate($d) {
	-moz-transform: rotate($d);
	-ms-transform: rotate($d);
	-webkit-transform: rotate($d);
	transform: rotate($d);
}

@mixin zooming($x, $y) {
	-moz-transform: scale($x, $y);
	-ms-transform: scale($x, $y);
	-webkit-transform: scale($x, $y);
	transform: scale($x, $y);
}

// $property - свойство
// $expression - значение
@mixin calc($property, $expression) { 
	#{$property}: -webkit-calc(#{$expression}); 
	#{$property}: calc(#{$expression}); 
}

@mixin bluring($valall, $valie) {
	-webkit-filter: blur($valall);
	filter: blur($valall);
	filter: progid:DXImageTransform.Microsoft.Blur(PixelRadius='#{$valie}');
}

@mixin flex($flow: row wrap, $justify: flex-start) {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;

	-webkit-flex-flow: $flow;
	flex-flow: $flow;

	justify-content: $justify;
}